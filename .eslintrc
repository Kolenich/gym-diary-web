{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "prettier"
  ],
  "plugins": [
    "@typescript-eslint",
    "import",
    "prettier"
  ],
  "parserOptions": {
    // Allows for the parsing of modern ECMAScript features
    "ecmaVersion": 2021,
    // Allows for the use of imports
    "sourceType": "module",
    "ecmaFeatures": {
      // Allows for the parsing of JSX
      "jsx": true,
      "arrowFunctions": true
    },
    "project": "./tsconfig.json"
  },
  "settings": {
    "react": {
      // Tells eslint-plugin-react to automatically detect the version of React to use
      "version": "detect"
    },
    "import/resolver": {
      "node": {
        "extensions": [
          ".ts",
          ".tsx"
        ],
        "paths": [
          "./src"
        ]
      }
    }
  },
  "rules": {
    // Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs
    // e.g. "@typescript-eslint/explicit-function-return-type": "off",
    "react/jsx-curly-brace-presence": [
      1,
      {
        "props": "never",
        "children": "never"
      }
    ],
    "react/jsx-boolean-value": [
      1,
      "never"
    ],
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "disallowTypeAnnotations": false,
        "fixStyle": "inline-type-imports"
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "types": [
          "boolean"
        ],
        "format": [
          "PascalCase"
        ],
        "prefix": [
          "is",
          "has"
        ]
      },
      {
        "selector": "variable",
        "format": [
          "strictCamelCase",
          "StrictPascalCase",
          "UPPER_CASE"
        ]
      },
      {
        "selector": "enum",
        "format": [
          "StrictPascalCase"
        ],
        "prefix": [
          "E"
        ]
      },
      {
        "selector": "enumMember",
        "format": [
          "StrictPascalCase"
        ]
      },
      {
        "selector": "interface",
        "format": [
          "StrictPascalCase"
        ],
        "prefix": [
          "I"
        ]
      },
      {
        "selector": "typeAlias",
        "format": [
          "StrictPascalCase"
        ],
        "prefix": [
          "T"
        ]
      },
      {
        "selector": "typeParameter",
        "format": [
          "StrictPascalCase"
        ],
        "prefix": [
          "G"
        ]
      }
    ],
    "import/no-duplicates": "error",
    "import/order": [
      "error",
      {
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "react-router-dom",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "react-test-renderer",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@reduxjs/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "react-redux",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@mui/**",
            "group": "external",
            "position": "before"
          }
        ],
        "pathGroupsExcludedImportTypes": [
          "builtin",
          "react"
        ],
        "newlines-between": "always"
      }
    ],
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react/prop-types": 0,
    "no-debugger": "off",
    "@typescript-eslint/explicit-function-return-type": "error",
    "arrow-body-style": [
      2,
      "as-needed"
    ],
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/triple-slash-reference": 0,
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "prefer-destructuring": [
      "error",
      {
        "object": true,
        "array": true
      }
    ],
    "semi": [
      "error",
      "always"
    ],
    "import/prefer-default-export": "off"
  }
}
